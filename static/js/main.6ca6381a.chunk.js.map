{"version":3,"sources":["css/style.module.css","components/Inputs/Input.js","components/HandleIcon/HandleIcon.js","components/AlertIcon/AlertIcon.js","components/Timer/Timer.js","components/App.js","serviceWorker.js","index.js","sounds/clockAlarm.mp3"],"names":["module","exports","Input","editIcon","secondsInput","name","handleInputChange","className","styles","timerSection","cx","timerSection__input","disabledInput","type","min","max","value","onChange","e","disabled","timerSection__label","HandleIcon","minutesInput","hoursInput","availableToStartFlag","stopWatchVisibility","handleEditIcon","timerStart","resetTimer","iconSection","onClick","title","AlertIcon","hideStopWatch","stopWatch","stopWatch__visibility","loop","src","alarmSound","Timer","state","intervalId","stopAlarmBySpace","which","numberValue","Number","target","length","setState","parseInt","clearInterval","interval","setInterval","secondsInputToNumber","minutesInputToNumber","hoursInputToNumber","document","querySelector","play","pause","window","addEventListener","this","timer","React","Component","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6ca6381a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"style_App__3MUIh\",\"title\":\"style_title__3oEQ0\",\"timer\":\"style_timer__35Cgg\",\"timerSection\":\"style_timerSection__xg6NA\",\"timerSection__input\":\"style_timerSection__input__13jCl\",\"timerSection__label\":\"style_timerSection__label__20uD5\",\"iconSection\":\"style_iconSection__1tmRD\",\"disabled\":\"style_disabled__3lUiL\",\"disabledInput\":\"style_disabledInput__HGPw_\",\"stopWatch\":\"style_stopWatch__Nbiir\",\"alarm\":\"style_alarm__2f2bP\",\"stopWatch__visibility\":\"style_stopWatch__visibility__1Uavb\"};","import React from \"react\";\r\nimport cx from \"classnames\";\r\nimport styles from \"../../css/style.module.css\";\r\n\r\nconst Input = ({ editIcon, secondsInput, name, handleInputChange }) => {\r\n  return (\r\n    <section className={styles.timerSection}>\r\n      <input\r\n        className={cx(styles.timerSection__input, {\r\n          [styles.disabledInput]: !editIcon,\r\n        })}\r\n        type=\"number\"\r\n        min=\"0\"\r\n        max=\"59\"\r\n        value={secondsInput <= 9 ? `0${secondsInput}` : secondsInput}\r\n        onChange={(e) => handleInputChange(e)}\r\n        name={name}\r\n        disabled={editIcon ? false : true}\r\n      />\r\n      <label className={styles.timerSection__label}>Seconds</label>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport cx from \"classnames\";\r\nimport styles from \"../../css/style.module.css\";\r\n\r\nconst HandleIcon = ({\r\n  editIcon,\r\n  secondsInput,\r\n  minutesInput,\r\n  hoursInput,\r\n  availableToStartFlag,\r\n  stopWatchVisibility,\r\n  handleEditIcon,\r\n  timerStart,\r\n  resetTimer,\r\n}) => {\r\n  return (\r\n    <section className={styles.iconSection}>\r\n      <div\r\n        onClick={stopWatchVisibility ? null : handleEditIcon}\r\n        className={cx({\r\n          \"fas fa-edit\": !editIcon,\r\n          \"fas fa-check\": editIcon,\r\n          [styles.disabled]: stopWatchVisibility,\r\n        })}\r\n        title={editIcon ? \"Accept\" : \"Edit\"}\r\n      ></div>\r\n      <div\r\n        className={cx({\r\n          \"fas fa-play\": availableToStartFlag,\r\n          \"fas fa-pause\": !availableToStartFlag,\r\n          [styles.disabled]:\r\n            editIcon ||\r\n            (secondsInput === 0 && hoursInput === 0 && minutesInput === 0),\r\n        })}\r\n        onClick={\r\n          editIcon ||\r\n          (secondsInput === 0 && hoursInput === 0 && minutesInput === 0)\r\n            ? null\r\n            : timerStart\r\n        }\r\n        title={availableToStartFlag ? \"Play\" : \"Stop\"}\r\n      ></div>\r\n      <div\r\n        className={cx(\"fas fa-undo-alt\", {\r\n          [styles.disabled]: stopWatchVisibility,\r\n        })}\r\n        onClick={stopWatchVisibility ? null : resetTimer}\r\n        title=\"Refresh\"\r\n      ></div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default HandleIcon;\r\n","import React from \"react\";\r\nimport cx from \"classnames\";\r\nimport styles from \"../../css/style.module.css\";\r\nimport alarmSound from \"../../sounds/clockAlarm.mp3\";\r\n\r\nconst AlertIcon = ({ stopWatchVisibility, hideStopWatch }) => {\r\n  return (\r\n    <>\r\n      <div\r\n        className={cx(\"fas fa-stopwatch\", styles.stopWatch, {\r\n          [styles.stopWatch__visibility]: stopWatchVisibility,\r\n        })}\r\n        onClick={hideStopWatch}\r\n      ></div>\r\n      <audio loop=\"loop\">\r\n        <source src={alarmSound} type=\"audio/mpeg\" />\r\n        <source src={alarmSound} type=\"audio/wav\" />\r\n        <source src={alarmSound} type=\"audio/ogg\" />\r\n      </audio>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AlertIcon;\r\n","import React from \"react\";\r\nimport Input from \"../Inputs/Input\";\r\nimport HandleIcon from \"../HandleIcon/HandleIcon\";\r\nimport AlertIcon from \"../AlertIcon/AlertIcon\";\r\nimport styles from \"../../css/style.module.css\";\r\n\r\nclass Timer extends React.Component {\r\n  state = {\r\n    hoursInput: 0,\r\n    minutesInput: 0,\r\n    secondsInput: 0,\r\n    editIcon: true,\r\n    intervalId: \"\",\r\n    availableToStartFlag: true,\r\n    stopWatchVisibility: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"keypress\", (e) => this.stopAlarmBySpace(e));\r\n  }\r\n\r\n  stopAlarmBySpace = (e) => {\r\n    const { stopWatchVisibility, secondsInput, editIcon } = this.state;\r\n\r\n    if (e.which === 13 && !stopWatchVisibility) {\r\n      this.handleEditIcon();\r\n    }\r\n    if (e.which === 32 && stopWatchVisibility) {\r\n      this.hideStopWatch();\r\n    } else if (\r\n      e.which === 32 &&\r\n      !stopWatchVisibility &&\r\n      secondsInput !== 0 &&\r\n      !editIcon\r\n    ) {\r\n      this.timerStart();\r\n    }\r\n  };\r\n\r\n  handleInputChange = (e) => {\r\n    const numberValue = Number(e.target.value);\r\n\r\n    if (numberValue.length > 2) {\r\n      return;\r\n    }\r\n\r\n    if (e.target.name === \"hoursInput\") {\r\n      this.setState({\r\n        hoursInput: `${\r\n          numberValue > 99 || numberValue < 0 ? 99 : parseInt(numberValue, 10)\r\n        }`,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        [e.target.name]: `${\r\n          numberValue > 59 || numberValue < 0 ? 59 : parseInt(numberValue, 10)\r\n        }`,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleEditIcon = () => {\r\n    clearInterval(this.state.intervalId);\r\n    this.setState({\r\n      editIcon: !this.state.editIcon,\r\n      availableToStartFlag: true,\r\n    });\r\n  };\r\n\r\n  timerStart = () => {\r\n    if (this.state.availableToStartFlag) {\r\n      const interval = setInterval(() => {\r\n        const {\r\n          secondsInput,\r\n          minutesInput,\r\n          hoursInput,\r\n          availableToStartFlag,\r\n        } = this.state;\r\n\r\n        const secondsInputToNumber = Number(secondsInput);\r\n        const minutesInputToNumber = Number(minutesInput);\r\n        const hoursInputToNumber = Number(hoursInput);\r\n        if (secondsInputToNumber > 0) {\r\n          this.setState({\r\n            secondsInput: secondsInputToNumber - 1,\r\n          });\r\n        }\r\n        if (secondsInputToNumber === 0 && minutesInputToNumber > 0) {\r\n          this.setState({\r\n            secondsInput: 59,\r\n            minutesInput: minutesInputToNumber - 1,\r\n          });\r\n        }\r\n        if (\r\n          secondsInputToNumber === 0 &&\r\n          minutesInputToNumber === 0 &&\r\n          hoursInputToNumber > 0\r\n        ) {\r\n          this.setState({\r\n            secondsInput: 59,\r\n            minutesInput: 59,\r\n            hoursInput: hoursInputToNumber - 1,\r\n          });\r\n        }\r\n        document.title = `${\r\n          this.state.stopWatchVisibility\r\n            ? (document.title = \"TIME IS UP\")\r\n            : (document.title = `${`${\r\n                hoursInput <= 9 ? `0${hoursInput}` : hoursInput\r\n              }`}:${`${\r\n                minutesInput <= 9 ? `0${minutesInput}` : minutesInput\r\n              }`}:${`${\r\n                secondsInput <= 9 ? `0${secondsInput}` : secondsInput\r\n              }`}`)\r\n        }`;\r\n        if (\r\n          hoursInputToNumber === 0 &&\r\n          minutesInputToNumber === 0 &&\r\n          secondsInputToNumber === 0 &&\r\n          !availableToStartFlag\r\n        ) {\r\n          document.querySelector(\"audio\").play();\r\n          this.setState({\r\n            availableToStartFlag: !availableToStartFlag,\r\n            stopWatchVisibility: true,\r\n          });\r\n        }\r\n      }, 1000);\r\n      this.setState({\r\n        intervalId: interval,\r\n        availableToStartFlag: !this.state.availableToStartFlag,\r\n      });\r\n    } else {\r\n      clearInterval(this.state.intervalId);\r\n      this.setState({\r\n        availableToStartFlag: !this.state.availableToStartFlag,\r\n      });\r\n    }\r\n  };\r\n\r\n  resetTimer = () => {\r\n    clearInterval(this.state.intervalId);\r\n    document.title = \"Timer With Alarm\";\r\n    this.setState({\r\n      hoursInput: 0,\r\n      minutesInput: 0,\r\n      secondsInput: 0,\r\n      editIcon: true,\r\n      availableToStartFlag: true,\r\n    });\r\n  };\r\n\r\n  hideStopWatch = () => {\r\n    document.querySelector(\"audio\").pause();\r\n    document.title = `Timer With Alarm`;\r\n    this.setState({\r\n      stopWatchVisibility: false,\r\n    });\r\n    this.resetTimer();\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      editIcon,\r\n      secondsInput,\r\n      minutesInput,\r\n      hoursInput,\r\n      availableToStartFlag,\r\n      stopWatchVisibility,\r\n    } = this.state;\r\n    return (\r\n      <div className={styles.timer}>\r\n        <Input\r\n          editIcon={editIcon}\r\n          secondsInput={hoursInput}\r\n          name=\"hoursInput\"\r\n          handleInputChange={this.handleInputChange}\r\n        />\r\n        <Input\r\n          editIcon={editIcon}\r\n          secondsInput={minutesInput}\r\n          name=\"minutesInput\"\r\n          handleInputChange={this.handleInputChange}\r\n        />\r\n        <Input\r\n          editIcon={editIcon}\r\n          secondsInput={secondsInput}\r\n          name=\"secondsInput\"\r\n          handleInputChange={this.handleInputChange}\r\n        />\r\n        <HandleIcon\r\n          editIcon={editIcon}\r\n          secondsInput={secondsInput}\r\n          minutesInput={minutesInput}\r\n          hoursInput={hoursInput}\r\n          availableToStartFlag={availableToStartFlag}\r\n          stopWatchVisibility={stopWatchVisibility}\r\n          handleEditIcon={this.handleEditIcon}\r\n          timerStart={this.timerStart}\r\n          resetTimer={this.resetTimer}\r\n        />\r\n        <AlertIcon\r\n          stopWatchVisibility={stopWatchVisibility}\r\n          hideStopWatch={this.hideStopWatch}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Timer;\r\n","import React from \"react\";\nimport Timer from \"./Timer/Timer\";\nimport styles from \"../css/style.module.css\";\n\nfunction App() {\n  return (\n    <div className={styles.App}>\n      <h1 className={styles.title}>TIMER</h1>\n      <Timer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/clockAlarm.e548390a.mp3\";"],"sourceRoot":""}