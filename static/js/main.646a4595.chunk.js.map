{"version":3,"sources":["css/style.module.css","components/Timer/Timer.js","components/App.js","serviceWorker.js","index.js","sounds/clockAlarm.mp3"],"names":["module","exports","Timer","state","hoursInput","minutesInput","secondsInput","editIcon","intervalId","flag","stopWatchVisibility","stopAlarmBySpace","e","which","handleEditIcon","hideStopWatch","timerStart","handleInputChange","numberValue","Number","target","value","length","name","setState","parseInt","clearInterval","interval","setInterval","document","title","querySelector","play","resetTimer","pause","window","addEventListener","this","className","styles","timer","timerSection","cx","timerSection__input","disabledInput","type","onChange","disabled","timerSection__label","htmlFor","min","max","iconSection","onClick","stopWatch","stopWatch__visibility","loop","src","alarmSound","React","Component","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.646a4595.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"style_App__3MUIh\",\"title\":\"style_title__3oEQ0\",\"timer\":\"style_timer__35Cgg\",\"timerSection\":\"style_timerSection__xg6NA\",\"timerSection__input\":\"style_timerSection__input__13jCl\",\"timerSection__label\":\"style_timerSection__label__20uD5\",\"iconSection\":\"style_iconSection__1tmRD\",\"disabled\":\"style_disabled__3lUiL\",\"disabledInput\":\"style_disabledInput__HGPw_\",\"stopWatch\":\"style_stopWatch__Nbiir\",\"alarm\":\"style_alarm__2f2bP\",\"stopWatch__visibility\":\"style_stopWatch__visibility__1Uavb\"};","import React from \"react\";\r\nimport cx from \"classnames\";\r\nimport alarmSound from \"../../sounds/clockAlarm.mp3\";\r\nimport styles from \"../../css/style.module.css\";\r\n\r\nclass Timer extends React.Component {\r\n  state = {\r\n    hoursInput: 0,\r\n    minutesInput: 0,\r\n    secondsInput: 0,\r\n    editIcon: true,\r\n    intervalId: \"\",\r\n    flag: true,\r\n    stopWatchVisibility: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"keypress\", (e) => this.stopAlarmBySpace(e));\r\n  }\r\n\r\n  stopAlarmBySpace = (e) => {\r\n    const { stopWatchVisibility, secondsInput, editIcon } = this.state;\r\n    if (e.which === 13 && !stopWatchVisibility) {\r\n      this.handleEditIcon();\r\n    }\r\n    if (e.which === 32 && stopWatchVisibility) {\r\n      this.hideStopWatch();\r\n    } else if (\r\n      e.which === 32 &&\r\n      !stopWatchVisibility &&\r\n      secondsInput !== 0 &&\r\n      !editIcon\r\n    ) {\r\n      this.timerStart();\r\n    }\r\n  };\r\n\r\n  handleInputChange = (e) => {\r\n    const numberValue = Number(e.target.value);\r\n\r\n    if (numberValue.length > 2) {\r\n      return;\r\n    }\r\n\r\n    if (e.target.name === \"hoursInput\") {\r\n      this.setState({\r\n        hoursInput: `${\r\n          numberValue > 99 || numberValue < 0 ? 99 : parseInt(numberValue, 10)\r\n        }`,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        [e.target.name]: `${\r\n          numberValue > 59 || numberValue < 0 ? 59 : parseInt(numberValue, 10)\r\n        }`,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleEditIcon = () => {\r\n    clearInterval(this.state.intervalId);\r\n    this.setState({\r\n      editIcon: !this.state.editIcon,\r\n      flag: true,\r\n    });\r\n  };\r\n\r\n  timerStart = () => {\r\n    if (this.state.flag) {\r\n      const interval = setInterval(() => {\r\n        const { secondsInput, minutesInput, hoursInput } = this.state;\r\n        if (secondsInput > 0) {\r\n          this.setState({\r\n            secondsInput: secondsInput - 1,\r\n          });\r\n        }\r\n        if (secondsInput === 0 && minutesInput > 0) {\r\n          this.setState({\r\n            secondsInput: 59,\r\n            minutesInput: minutesInput - 1,\r\n          });\r\n        }\r\n        if (secondsInput === 0 && minutesInput === 0 && hoursInput > 0) {\r\n          this.setState({\r\n            secondsInput: 59,\r\n            minutesInput: 59,\r\n            hoursInput: hoursInput - 1,\r\n          });\r\n        }\r\n        document.title = `${\r\n          this.state.stopWatchVisibility\r\n            ? (document.title = \"TIME IS UP\")\r\n            : (document.title = `${`${\r\n                hoursInput <= 9 ? `0${hoursInput}` : hoursInput\r\n              }`}:${`${\r\n                minutesInput <= 9 ? `0${minutesInput}` : minutesInput\r\n              }`}:${`${\r\n                secondsInput <= 9 ? `0${secondsInput}` : secondsInput\r\n              }`}`)\r\n        }`;\r\n        if (\r\n          hoursInput === 0 &&\r\n          minutesInput === 0 &&\r\n          secondsInput === 0 &&\r\n          !this.state.flag\r\n        ) {\r\n          document.querySelector(\"audio\").play();\r\n          this.setState({\r\n            flag: !this.state.flag,\r\n            stopWatchVisibility: true,\r\n          });\r\n        }\r\n      }, 1000);\r\n      this.setState({\r\n        intervalId: interval,\r\n        flag: !this.state.flag,\r\n      });\r\n    } else {\r\n      clearInterval(this.state.intervalId);\r\n      this.setState({\r\n        flag: !this.state.flag,\r\n      });\r\n    }\r\n  };\r\n\r\n  resetTimer = () => {\r\n    clearInterval(this.state.intervalId);\r\n    this.setState({\r\n      hoursInput: 0,\r\n      minutesInput: 0,\r\n      secondsInput: 0,\r\n      editIcon: true,\r\n      flag: true,\r\n    });\r\n  };\r\n\r\n  hideStopWatch = () => {\r\n    document.querySelector(\"audio\").pause();\r\n    document.title = `Timer With Alarm`;\r\n    this.setState({\r\n      stopWatchVisibility: false,\r\n    });\r\n    this.resetTimer();\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      editIcon,\r\n      secondsInput,\r\n      minutesInput,\r\n      hoursInput,\r\n      flag,\r\n      stopWatchVisibility,\r\n    } = this.state;\r\n    return (\r\n      <div className={styles.timer}>\r\n        <section className={styles.timerSection}>\r\n          <input\r\n            className={cx(styles.timerSection__input, {\r\n              [styles.disabledInput]: !editIcon,\r\n            })}\r\n            type=\"number\"\r\n            value={hoursInput <= 9 ? `0${hoursInput}` : hoursInput}\r\n            onChange={(e) => this.handleInputChange(e)}\r\n            name=\"hoursInput\"\r\n            disabled={editIcon ? false : true}\r\n          />\r\n          <label className={styles.timerSection__label} htmlFor=\"hours\">\r\n            Hours\r\n          </label>\r\n        </section>\r\n        <section className={styles.timerSection}>\r\n          <input\r\n            className={cx(styles.timerSection__input, {\r\n              [styles.disabledInput]: !editIcon,\r\n            })}\r\n            type=\"number\"\r\n            value={minutesInput <= 9 ? `0${minutesInput}` : minutesInput}\r\n            onChange={(e) => this.handleInputChange(e)}\r\n            name=\"minutesInput\"\r\n            disabled={editIcon ? false : true}\r\n          />\r\n          <label className={styles.timerSection__label} htmlFor=\"\">\r\n            Minutes\r\n          </label>\r\n        </section>\r\n        <section className={styles.timerSection}>\r\n          <input\r\n            className={cx(styles.timerSection__input, {\r\n              [styles.disabledInput]: !editIcon,\r\n            })}\r\n            type=\"number\"\r\n            min=\"0\"\r\n            max=\"59\"\r\n            value={secondsInput <= 9 ? `0${secondsInput}` : secondsInput}\r\n            onChange={(e) => this.handleInputChange(e)}\r\n            name=\"secondsInput\"\r\n            disabled={editIcon ? false : true}\r\n          />\r\n          <label className={styles.timerSection__label} htmlFor=\"\">\r\n            Seconds\r\n          </label>\r\n        </section>\r\n        <section className={styles.iconSection}>\r\n          <div\r\n            onClick={stopWatchVisibility ? null : this.handleEditIcon}\r\n            className={cx({\r\n              \"fas fa-edit\": !editIcon,\r\n              \"fas fa-check\": editIcon,\r\n              [styles.disabled]: stopWatchVisibility,\r\n            })}\r\n          ></div>\r\n          <div\r\n            className={cx({\r\n              \"fas fa-play\": flag,\r\n              \"fas fa-pause\": !flag,\r\n              [styles.disabled]:\r\n                editIcon ||\r\n                (secondsInput === 0 && hoursInput === 0 && minutesInput === 0),\r\n            })}\r\n            onClick={\r\n              editIcon ||\r\n              (secondsInput === 0 && hoursInput === 0 && minutesInput === 0)\r\n                ? null\r\n                : this.timerStart\r\n            }\r\n          ></div>\r\n          <div\r\n            className={cx(\"fas fa-undo-alt\", {\r\n              [styles.disabled]: stopWatchVisibility,\r\n            })}\r\n            onClick={stopWatchVisibility ? null : this.resetTimer}\r\n          ></div>\r\n        </section>\r\n        <div\r\n          className={cx(\"fas fa-stopwatch\", styles.stopWatch, {\r\n            [styles.stopWatch__visibility]: stopWatchVisibility,\r\n          })}\r\n          onClick={this.hideStopWatch}\r\n        ></div>\r\n        <audio loop=\"loop\">\r\n          <source src={alarmSound} type=\"audio/mpeg\" />\r\n          <source src={alarmSound} type=\"audio/wav\" />\r\n          <source src={alarmSound} type=\"audio/ogg\" />\r\n        </audio>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Timer;\r\n","import React from \"react\";\nimport Timer from \"./Timer/Timer\";\nimport styles from \"../css/style.module.css\";\n\nfunction App() {\n  return (\n    <div className={styles.App}>\n      <h1 className={styles.title}>TIMER</h1>\n      <Timer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/clockAlarm.e548390a.mp3\";"],"sourceRoot":""}